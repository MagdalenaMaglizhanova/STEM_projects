import streamlit as st

st.title("üå¨Ô∏è STEM —É—Ä–æ–∫: –í—è—Ç—ä—Ä–Ω–∏ –º–µ–ª–Ω–∏—Ü–∏")

# –£—Ä–æ–∫
st.header("–ö–∞–∫ —Ä–∞–±–æ—Ç–∏ –≤—è—Ç—ä—Ä–Ω–∞—Ç–∞ –º–µ–ª–Ω–∏—Ü–∞?")
st.markdown("""
–í—è—Ç—ä—Ä–Ω–∏—Ç–µ –º–µ–ª–Ω–∏—Ü–∏ –∏–∑–ø–æ–ª–∑–≤–∞—Ç —Å–∏–ª–∞—Ç–∞ –Ω–∞ –≤—è—Ç—ä—Ä–∞, –∑–∞ –¥–∞ –≤—ä—Ä—Ç—è—Ç –ª–æ–ø–∞—Ç–∫–∏—Ç–µ —Å–∏. –¢–æ–≤–∞ –≤—ä—Ä—Ç–µ–Ω–µ —Å–µ –ø—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞ –≤ –µ–Ω–µ—Ä–≥–∏—è, –∫–æ—è—Ç–æ –º–æ–∂–µ –¥–∞ —Å–µ –∏–∑–ø–æ–ª–∑–≤–∞ –∑–∞ —Ä–∞–∑–ª–∏—á–Ω–∏ –Ω–µ—â–∞ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä –∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –Ω–∞ –µ–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ –∏–ª–∏ –∑–∞ —Å–º–∏–ª–∞–Ω–µ –Ω–∞ –∑—ä—Ä–Ω–æ.

- –í—è—Ç—ä—Ä—ä—Ç —Å—ä–∑–¥–∞–≤–∞ —Å–∏–ª–∞, –∫–æ—è—Ç–æ –∑–∞–≤—ä—Ä—Ç–∞ –ª–æ–ø–∞—Ç–∫–∏—Ç–µ.
- –°–∫–æ—Ä–æ—Å—Ç—Ç–∞ –Ω–∞ –≤—è—Ç—ä—Ä–∞ –≤–ª–∏—è–µ –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—Ç–∞ –Ω–∞ –≤—ä—Ä—Ç–µ–Ω–µ –∏ –∫–æ–ª–∫–æ –µ–Ω–µ—Ä–≥–∏—è —Å–µ –ø—Ä–æ–∏–∑–≤–µ–∂–¥–∞.
- –õ–æ–ø–∞—Ç–∫–∏—Ç–µ —Å–∞ –ø—Ä–æ–µ–∫—Ç–∏—Ä–∞–Ω–∏ —Ç–∞–∫–∞, —á–µ –¥–∞ –∏–∑–ø–æ–ª–∑–≤–∞—Ç –º–∞–∫—Å–∏–º–∞–ª–Ω–æ –≤—è—Ç—ä—Ä–Ω–∞—Ç–∞ –µ–Ω–µ—Ä–≥–∏—è.

> **–ó–∞–¥–∞—á–∞:** –†–∞–∑–±–µ—Ä–∏ –∫–∞–∫ —Å–∏–ª–∞—Ç–∞ –Ω–∞ –≤—è—Ç—ä—Ä–∞ –≤–ª–∏—è–µ –Ω–∞ –≤—ä—Ä—Ç–µ–Ω–µ—Ç–æ –∏ –µ–Ω–µ—Ä–≥–∏—è—Ç–∞.
""")

st.image("https://upload.wikimedia.org/wikipedia/commons/thumb/f/fd/Wind_turbine_blades_rotating_in_sunlight_%28cropped%29.jpg/320px-Wind_turbine_blades_rotating_in_sunlight_%28cropped%29.jpg", caption="–í—è—Ç—ä—Ä–Ω–∞ –º–µ–ª–Ω–∏—Ü–∞")

#  –°–ª–∞–π–¥–µ—Ä –∑–∞ —Å–∏–ª–∞ –Ω–∞ –≤—è—Ç—ä—Ä–∞
wind_speed = st.slider("–ò–∑–±–µ—Ä–∏ —Å–∏–ª–∞ –Ω–∞ –≤—è—Ç—ä—Ä–∞", min_value=0.0, max_value=10.0, value=1.0, step=0.1)

# 3D –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å –ø–æ–ª—É—á–µ–Ω–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç –Ω–∞ wind_speed –æ—Ç Streamlit
threejs_html = f"""
<!DOCTYPE html>
<html lang="bg">
<head>
  <meta charset="UTF-8" />
  <title>STEM: –í—è—Ç—ä—Ä–Ω–∞ –¢—É—Ä–±–∏–Ω–∞</title>
  <style>
    body {{ margin: 0; overflow: hidden; }}
    canvas {{ display: block; }}
    #info {{
      position: absolute;
      top: 10px; left: 10px;
      color: white;
      background: rgba(0,0,0,0.5);
      padding: 10px;
      font-family: sans-serif;
      z-index: 10;
    }}
  </style>
</head>
<body>
<div id="info">üí® –í—è—Ç—ä—Ä: <span id="windSpeed">{wind_speed:.1f}</span> | ‚ö° –ï–Ω–µ—Ä–≥–∏—è: <span id="energy">0</span> kWh</div>

<script src="https://cdn.jsdelivr.net/npm/three@0.160.0/build/three.min.js"></script>

<script>
  const scene = new THREE.Scene();
  scene.background = new THREE.Color(0xaec6cf);

  const camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);
  camera.position.set(0, 3, 7);

  const renderer = new THREE.WebGLRenderer({ antialias: true });
  renderer.setSize(window.innerWidth, window.innerHeight);
  document.body.appendChild(renderer.domElement);

  const light = new THREE.DirectionalLight(0xffffff, 1);
  light.position.set(5, 10, 7);
  scene.add(light);
  scene.add(new THREE.AmbientLight(0x404040));

  const ground = new THREE.Mesh(
    new THREE.PlaneGeometry(20, 20),
    new THREE.MeshStandardMaterial({ color: 0x228B22 })
  );
  ground.rotation.x = -Math.PI / 2;
  scene.add(ground);

  const pole = new THREE.Mesh(
    new THREE.CylinderGeometry(0.1, 0.2, 3),
    new THREE.MeshStandardMaterial({ color: 0xffffff })
  );
  pole.position.y = 1.5;
  scene.add(pole);

  const hub = new THREE.Mesh(
    new THREE.SphereGeometry(0.2),
    new THREE.MeshStandardMaterial({ color: 0x999999 })
  );
  hub.position.y = 3;
  scene.add(hub);

  const blades = [];
  for (let i = 0; i < 3; i++) {{
    const blade = new THREE.Mesh(
      new THREE.BoxGeometry(0.05, 1, 0.1),
      new THREE.MeshStandardMaterial({{ color: 0xff0000 }})
    );
    blade.position.y = 3;
    blade.geometry.translate(0, 0.5, 0);
    scene.add(blade);
    blades.push(blade);
  }}

  const windSpeed = {wind_speed};

  let angle = 0;
  function animate() {{
    requestAnimationFrame(animate);
    angle += windSpeed * 0.01;
    blades.forEach((blade, i) => {{
      const rot = angle + (i * Math.PI * 2 / 3);
      blade.position.x = Math.sin(rot) * 0.3;
      blade.position.z = Math.cos(rot) * 0.3;
      blade.rotation.y = rot;
    }});
    document.getElementById('windSpeed').textContent = windSpeed.toFixed(1);
    document.getElementById('energy').textContent = (windSpeed * 5).toFixed(0);
    renderer.render(scene, camera);
  }}
  animate();

  window.addEventListener('resize', () => {{
    camera.aspect = window.innerWidth/window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
  }});
</script>
</body>
</html>
"""

st.header("–¢–µ—Å—Ç–≤–∞–π –º–µ–ª–Ω–∏—Ü–∞—Ç–∞")
st.components.v1.html(threejs_html, height=600, scrolling=False)

# –•–∏–ø–æ—Ç–µ–∑–∞
st.header("–ù–∞–ø—Ä–∞–≤–∏ —Ö–∏–ø–æ—Ç–µ–∑–∞")

hypothesis = st.text_area("–ö–∞–∫ —Å–º—è—Ç–∞—à, —á–µ —â–µ —Å–µ –ø—Ä–æ–º–µ–Ω–∏ –≤—ä—Ä—Ç–µ–Ω–µ—Ç–æ –∏ –µ–Ω–µ—Ä–≥–∏—è—Ç–∞ –ø—Ä–∏ —É–≤–µ–ª–∏—á–∞–≤–∞–Ω–µ –Ω–∞ —Å–∏–ª–∞—Ç–∞ –Ω–∞ –≤—è—Ç—ä—Ä–∞?", height=150)

if st.button("–ò–∑–ø—Ä–∞—Ç–∏ —Ö–∏–ø–æ—Ç–µ–∑–∞—Ç–∞"):
    if hypothesis.strip() == "":
        st.warning("–ú–æ–ª—è, –Ω–∞–ø–∏—à–∏ —Ö–∏–ø–æ—Ç–µ–∑–∞ –ø—Ä–µ–¥–∏ –¥–∞ –∏–∑–ø—Ä–∞—Ç–∏—à.")
    else:
        st.success("–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º! –¢–≤–æ—è—Ç–∞ —Ö–∏–ø–æ—Ç–µ–∑–∞ –µ –∑–∞–ø–∏—Å–∞–Ω–∞.")
        st.write("–¢–≤–æ—è—Ç–∞ —Ö–∏–ø–æ—Ç–µ–∑–∞:")
        st.write(hypothesis)
